{
  "openapi": "3.0.1",
  "info": {
    "version": "1.3.0",
    "title": "Star wars Movies",
    "description": "API documentation",
    "contact": {
      "name": "Abiola Ojo",
      "email": "abiolaojovictor@gmail.com"
    }
  },

  "tags": [
    {
      "name": "CRUD operations"
    }
  ],
  "components": {
    "schemas": {
      "sort": {
        "type": "string",
        "description": "sort parameter which can either be name or height",
        "enum": ["name", "height"]
      },
      "order": {
        "type": "string",
        "description": "order direction, which can either be ascending or descending",
        "enum": ["ascending", "descending"]
      },
      "filter": {
        "type": "string",
        "description": " a filter paremeter to filter result by gender",
        "enum": ["agag", "agfggfa"]
      },
      "openeing_crawl": {
        "type": "string"
      },
      "commentCount": {
        "type": "integer"
      },
      "release_date": {
        "type": "string"
      },
      "movie": {
        "type": "string",
        "description": "title of the movie user wants to comment on"
      },
      "comment": {
        "type": "string",
        "description": "comment message on amovie"
      },
      "comments": {
        "type": "object",
        "properties": {
          "movie": {
            "$ref": "#/components/schemas/movie"
          },
          "comment": {
            "$ref": "#/components/schemas/comment"
          }
        }
      },

      "commentObject": {
        "type": "object",
        "properties": {
          "movie": {
            "$ref": "#/components/schemas/movie"
          },
          "comment": {
            "$ref": "#/components/schemas/comment"
          },
          "commenterip": {
            "type": "string"
          },
          "createdat": {
            "type": "string"
          }
        }
      },

      "commentData": {
        "type": "object",
        "properties": {
          "data": [
            {
              "$ref": "#/components/schemas/movieObject"
            }
          ]
        }
      },
      "characterObject": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "totalHeightInFt": {
            "type": "string"
          },
          "totalHeightInCM": {
            "type": "string"
          },
          "character": [
            {
              "name": {
                "type": "string"
              },
              "height": {
                "type": "string"
              },
              "mass": {
                "type": "string"
              },
              "hair_color": {
                "type": "string"
              },
              "skin_color": {
                "type": "string"
              },
              "eye_color": {
                "type": "string"
              },
              "birth_year": {
                "type": "string"
              },
              "gender": {
                "type": "string"
              }
            }
          ]
        }
      },
      "characters": {
        "type": "object",
        "properties": {
          "data": [
            {
              "$ref": "#/components/schemas/characterObject"
            }
          ]
        }
      },
      "movieObject": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/movie"
          },
          "openeing_crawl": {
            "$ref": "#/components/schemas/openeing_crawl"
          },
          "commentCount": {
            "$ref": "#/components/schemas/commentCount"
          },
          "release_date": {
            "$ref": "#/components/schemas/release_date"
          }
        }
      },
      "allMovies": {
        "type": "object",
        "properties": {
          "data": [
            {
              "$ref": "#/components/schemas/movieObject"
            }
          ]
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "paths": {
    "/movies": {
      "get": {
        "tags": ["CRUD operations"],
        "description": "get all movies",
        "operationId": "getMovies",
        "parameters": [],
        "responses": {
          "200": {
            "description": "all movies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/allMovies"
                },
                "example": {
                  "data": [
                    {
                      "title": "A New Hope",
                      "openeing_crawl": "It is a period of civil war.\r\nRebel spaceships, striking\r\nfrom a hidden base, have won\r\ntheir first victory against\r\nthe evil Galactic Empire.\r\n\r\nDuring the battle, Rebel\r\nspies managed to steal secret\r\nplans to the Empire's\r\nultimate weapon, the DEATH\r\nSTAR, an armored space\r\nstation with enough power\r\nto destroy an entire planet.\r\n\r\nPursued by the Empire's\r\nsinister agents, Princess\r\nLeia races home aboard her\r\nstarship, custodian of the\r\nstolen plans that can save her\r\npeople and restore\r\nfreedom to the galaxy....",
                      "commentCount": 1,
                      "date": "1977-05-25"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "network error or database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Something failed, try again later",
                  "success": false
                }
              }
            }
          }
        }
      }
    },
    "/characters": {
      "get": {
        "tags": ["CRUD operations"],
        "description": "get all character",
        "operationId": "getCharacters",
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/sort"
            },
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/order"
            },
            "required": false
          },
          {
            "name": "filter",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/filter"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "get characters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/characters"
                },
                "example": {
                  "data": [
                    {
                      "count": 10,
                      "totalHeightInFt": "52ft and 2.77inches",
                      "totalHeightInCM": "1592cm",
                      "characters": [
                        {
                          "name": "Luke Skywalker",
                          "height": "172",
                          "mass": "77",
                          "hair_color": "blond",
                          "skin_color": "fair",
                          "eye_color": "blue",
                          "birth_year": "19BBY",
                          "gender": "male",
                          "homeworld": "http://swapi.dev/api/planets/1/",
                          "films": [
                            "http://swapi.dev/api/films/1/",
                            "http://swapi.dev/api/films/2/",
                            "http://swapi.dev/api/films/3/",
                            "http://swapi.dev/api/films/6/"
                          ],
                          "species": [],
                          "vehicles": [
                            "http://swapi.dev/api/vehicles/14/",
                            "http://swapi.dev/api/vehicles/30/"
                          ],
                          "starships": [
                            "http://swapi.dev/api/starships/12/",
                            "http://swapi.dev/api/starships/22/"
                          ],
                          "created": "2014-12-09T13:50:51.644000Z",
                          "edited": "2014-12-20T21:17:56.891000Z",
                          "url": "http://swapi.dev/api/people/1/"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "network error or database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Something failed, try again later",
                  "success": false
                }
              }
            }
          },
          "400": {
            "description": "invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "sort can only be name or height",
                  "success": false
                }
              }
            }
          }
        }
      }
    },
    "/comments": {
      "get": {
        "tags": ["CRUD operations"],
        "description": "get comments",
        "operationId": "getComments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "all comments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commentData"
                },
                "example": {
                  "data": [
                    {
                      "id": 2,
                      "movie": "A New Hope",
                      "comment": "bad ass comment",
                      "commenterip": "::1",
                      "createdat": "2020-07-04T16:32:21.947Z"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "network error or database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Something failed, try again later",
                  "success": false
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["CRUD operations"],
        "description": "post comment",
        "operationId": "postComment",
        "parameters": [],
        "requestBody": {
          "content": {
            " 'application/json'": {
              "schema": {
                "$ref": "#/components/schemas/comments"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "comment posted succesfully"
          },
          "500": {
            "description": "network error or database error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Something failed, try again later",
                  "success": false
                }
              }
            }
          },
          "400": {
            "description": "invalid parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "movie and comment are required",
                  "success": false
                }
              }
            }
          }
        }
      }
    }
  }
}
